name: Build and Test CDK

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk@2

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ~/.local/share/NuGet/v3-cache
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --nologo

      - name: Test
        run: dotnet test tests/FsCdk.Tests/FsCdk.Tests.fsproj --configuration Release --no-build --nologo

      - name: CDK Synth
        run: npx cdk synth

      - name: Upload synthesized Cloud Assembly
        uses: actions/upload-artifact@v4
        with:
          name: cdk.out
          path: cdk.out
